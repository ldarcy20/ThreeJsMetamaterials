/**
 * Minified by jsDelivr using UglifyJS v3.1.10.
 * Original file: /npm/three-csg@1.0.0/index.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
 "use strict";var ThreeBSP,EPSILON=1e-5,COPLANAR=0,FRONT=1,BACK=2,SPANNING=3;(ThreeBSP=function(e){var t,r,i,o,s,n,h,l=[];if(e instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else{if(!(e instanceof THREE.Mesh)){if(e instanceof ThreeBSP.Node)return this.tree=e,this.matrix=new THREE.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported"}e.updateMatrix(),this.matrix=e.matrix.clone(),e=e.geometry}for(t=0,r=e.faces.length;t<r;t++){if(i=e.faces[t],s=e.faceVertexUvs[0][t],h=new ThreeBSP.Polygon,i instanceof THREE.Face3)o=e.vertices[i.a],n=s?new THREE.Vector2(s[0].x,s[0].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[0],n)).applyMatrix4(this.matrix),h.vertices.push(o),o=e.vertices[i.b],n=s?new THREE.Vector2(s[1].x,s[1].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[2],n)).applyMatrix4(this.matrix),h.vertices.push(o),o=e.vertices[i.c],n=s?new THREE.Vector2(s[2].x,s[2].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[2],n)).applyMatrix4(this.matrix),h.vertices.push(o);else{if(THREE.Face4,0)throw"Invalid face type at index "+t;o=e.vertices[i.a],n=s?new THREE.Vector2(s[0].x,s[0].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[0],n)).applyMatrix4(this.matrix),h.vertices.push(o),o=e.vertices[i.b],n=s?new THREE.Vector2(s[1].x,s[1].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[1],n)).applyMatrix4(this.matrix),h.vertices.push(o),o=e.vertices[i.c],n=s?new THREE.Vector2(s[2].x,s[2].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[2],n)).applyMatrix4(this.matrix),h.vertices.push(o),o=e.vertices[i.d],n=s?new THREE.Vector2(s[3].x,s[3].y):null,(o=new ThreeBSP.Vertex(o.x,o.y,o.z,i.vertexNormals[3],n)).applyMatrix4(this.matrix),h.vertices.push(o)}h.calculateProperties(),l.push(h)}this.tree=new ThreeBSP.Node(l)}).prototype.subtract=function(e){var t=this.tree.clone(),r=e.tree.clone();return t.invert(),t.clipTo(r),r.clipTo(t),r.invert(),r.clipTo(t),r.invert(),t.build(r.allPolygons()),t.invert(),t=new ThreeBSP(t),t.matrix=this.matrix,t},ThreeBSP.prototype.union=function(e){var t=this.tree.clone(),r=e.tree.clone();return t.clipTo(r),r.clipTo(t),r.invert(),r.clipTo(t),r.invert(),t.build(r.allPolygons()),t=new ThreeBSP(t),t.matrix=this.matrix,t},ThreeBSP.prototype.intersect=function(e){var t=this.tree.clone(),r=e.tree.clone();return t.invert(),r.clipTo(t),r.invert(),t.clipTo(r),r.clipTo(t),t.build(r.allPolygons()),t.invert(),t=new ThreeBSP(t),t.matrix=this.matrix,t},ThreeBSP.prototype.toGeometry=function(){var e,t,r,i,o,s,n,h,l,c,a=(new THREE.Matrix4).getInverse(this.matrix),p=new THREE.Geometry,y=this.tree.allPolygons(),u=y.length,x={};for(e=0;e<u;e++)for(i=(r=y[e]).vertices.length,t=2;t<i;t++)c=[],h=r.vertices[0],c.push(new THREE.Vector2(h.uv.x,h.uv.y)),(h=new THREE.Vector3(h.x,h.y,h.z)).applyMatrix4(a),void 0!==x[h.x+","+h.y+","+h.z]?o=x[h.x+","+h.y+","+h.z]:(p.vertices.push(h),o=x[h.x+","+h.y+","+h.z]=p.vertices.length-1),h=r.vertices[t-1],c.push(new THREE.Vector2(h.uv.x,h.uv.y)),(h=new THREE.Vector3(h.x,h.y,h.z)).applyMatrix4(a),void 0!==x[h.x+","+h.y+","+h.z]?s=x[h.x+","+h.y+","+h.z]:(p.vertices.push(h),s=x[h.x+","+h.y+","+h.z]=p.vertices.length-1),h=r.vertices[t],c.push(new THREE.Vector2(h.uv.x,h.uv.y)),(h=new THREE.Vector3(h.x,h.y,h.z)).applyMatrix4(a),void 0!==x[h.x+","+h.y+","+h.z]?n=x[h.x+","+h.y+","+h.z]:(p.vertices.push(h),n=x[h.x+","+h.y+","+h.z]=p.vertices.length-1),l=new THREE.Face3(o,s,n,new THREE.Vector3(r.normal.x,r.normal.y,r.normal.z)),p.faces.push(l),p.faceVertexUvs[0].push(c);return p},ThreeBSP.prototype.toMesh=function(e){var t=this.toGeometry(),r=new THREE.Mesh(t,e);return r.position.setFromMatrixPosition(this.matrix),r.rotation.setFromRotationMatrix(this.matrix),r},ThreeBSP.Polygon=function(e,t,r){e instanceof Array||(e=[]),this.vertices=e,e.length>0?this.calculateProperties():this.normal=this.w=void 0},ThreeBSP.Polygon.prototype.calculateProperties=function(){var e=this.vertices[0],t=this.vertices[1],r=this.vertices[2];return this.normal=t.clone().subtract(e).cross(r.clone().subtract(e)).normalize(),this.w=this.normal.clone().dot(e),this},ThreeBSP.Polygon.prototype.clone=function(){var e,t,r=new ThreeBSP.Polygon;for(e=0,t=this.vertices.length;e<t;e++)r.vertices.push(this.vertices[e].clone());return r.calculateProperties(),r},ThreeBSP.Polygon.prototype.flip=function(){var e,t=[];for(this.normal.multiplyScalar(-1),this.w*=-1,e=this.vertices.length-1;e>=0;e--)t.push(this.vertices[e]);return this.vertices=t,this},ThreeBSP.Polygon.prototype.classifyVertex=function(e){var t=this.normal.dot(e)-this.w;return t<-EPSILON?BACK:t>EPSILON?FRONT:COPLANAR},ThreeBSP.Polygon.prototype.classifySide=function(e){var t,r,i,o=0,s=0,n=e.vertices.length;for(t=0;t<n;t++)r=e.vertices[t],(i=this.classifyVertex(r))===FRONT?o++:i===BACK&&s++;return o>0&&0===s?FRONT:0===o&&s>0?BACK:0===o&&0===s?COPLANAR:SPANNING},ThreeBSP.Polygon.prototype.splitPolygon=function(e,t,r,i,o){var s=this.classifySide(e);if(s===COPLANAR)(this.normal.dot(e.normal)>0?t:r).push(e);else if(s===FRONT)i.push(e);else if(s===BACK)o.push(e);else{var n,h,l,c,a,p,y,u,x,v=[],T=[];for(h=0,n=e.vertices.length;h<n;h++)l=(h+1)%n,p=e.vertices[h],y=e.vertices[l],c=this.classifyVertex(p),a=this.classifyVertex(y),c!=BACK&&v.push(p),c!=FRONT&&T.push(p),(c|a)===SPANNING&&(u=(this.w-this.normal.dot(p))/this.normal.dot(y.clone().subtract(p)),x=p.interpolate(y,u),v.push(x),T.push(x));v.length>=3&&i.push(new ThreeBSP.Polygon(v).calculateProperties()),T.length>=3&&o.push(new ThreeBSP.Polygon(T).calculateProperties())}},ThreeBSP.Vertex=function(e,t,r,i,o){this.x=e,this.y=t,this.z=r,this.normal=i||new THREE.Vector3,this.uv=o||new THREE.Vector2},ThreeBSP.Vertex.prototype.clone=function(){return new ThreeBSP.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())},ThreeBSP.Vertex.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},ThreeBSP.Vertex.prototype.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},ThreeBSP.Vertex.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this.z*=e,this},ThreeBSP.Vertex.prototype.cross=function(e){var t=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-r*e.x,this},ThreeBSP.Vertex.prototype.normalize=function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=e,this.y/=e,this.z/=e,this},ThreeBSP.Vertex.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},ThreeBSP.Vertex.prototype.lerp=function(e,t){return this.add(e.clone().subtract(this).multiplyScalar(t)),this.normal.add(e.normal.clone().sub(this.normal).multiplyScalar(t)),this.uv.add(e.uv.clone().sub(this.uv).multiplyScalar(t)),this},ThreeBSP.Vertex.prototype.interpolate=function(e,t){return this.clone().lerp(e,t)},ThreeBSP.Vertex.prototype.applyMatrix4=function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12],this.y=o[1]*t+o[5]*r+o[9]*i+o[13],this.z=o[2]*t+o[6]*r+o[10]*i+o[14],this},ThreeBSP.Node=function(e){var t,r,i=[],o=[];if(this.polygons=[],this.front=this.back=void 0,e instanceof Array&&0!==e.length){for(this.divider=e[0].clone(),t=0,r=e.length;t<r;t++)this.divider.splitPolygon(e[t],this.polygons,this.polygons,i,o);i.length>0&&(this.front=new ThreeBSP.Node(i)),o.length>0&&(this.back=new ThreeBSP.Node(o))}},ThreeBSP.Node.isConvex=function(e){var t,r;for(t=0;t<e.length;t++)for(r=0;r<e.length;r++)if(t!==r&&e[t].classifySide(e[r])!==BACK)return!1;return!0},ThreeBSP.Node.prototype.build=function(e){var t,r,i=[],o=[];for(this.divider||(this.divider=e[0].clone()),t=0,r=e.length;t<r;t++)this.divider.splitPolygon(e[t],this.polygons,this.polygons,i,o);i.length>0&&(this.front||(this.front=new ThreeBSP.Node),this.front.build(i)),o.length>0&&(this.back||(this.back=new ThreeBSP.Node),this.back.build(o))},ThreeBSP.Node.prototype.allPolygons=function(){var e=this.polygons.slice();return this.front&&(e=e.concat(this.front.allPolygons())),this.back&&(e=e.concat(this.back.allPolygons())),e},ThreeBSP.Node.prototype.clone=function(){var e=new ThreeBSP.Node;return e.divider=this.divider.clone(),e.polygons=this.polygons.map(function(e){return e.clone()}),e.front=this.front&&this.front.clone(),e.back=this.back&&this.back.clone(),e},ThreeBSP.Node.prototype.invert=function(){var e,t,r;for(e=0,t=this.polygons.length;e<t;e++)this.polygons[e].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),r=this.front,this.front=this.back,this.back=r,this},ThreeBSP.Node.prototype.clipPolygons=function(e){var t,r,i,o;if(!this.divider)return e.slice();for(i=[],o=[],t=0,r=e.length;t<r;t++)this.divider.splitPolygon(e[t],i,o,i,o);return this.front&&(i=this.front.clipPolygons(i)),o=this.back?this.back.clipPolygons(o):[],i.concat(o)},ThreeBSP.Node.prototype.clipTo=function(e){this.polygons=e.clipPolygons(this.polygons),this.front&&this.front.clipTo(e),this.back&&this.back.clipTo(e)},module.exports=ThreeBSP;
 //# sourceMappingURL=/sm/5c8881f5fe328fbe3a91444a1a87d458694d608e859d2004169ea07db5c9e13f.map